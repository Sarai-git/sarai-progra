---
title: "Pagina web"
author: "Giordani"
format: html
editor: visual
output-file: index
editor_options: 
  chunk_output_type: console
---

# Modelo lineales mixtos
## Importar datos
```{r}
source('https://inkaverse.com/setup.r')
library(googlesheets4)
library(tidyverse)

url <- 'https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346'

gs<- as_sheets_id(url)

fb<- gs %>%
  range_read("fb")

str(fb)
```

## modelo lineal

```{r}
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno , data = fb )

anova(modelo)

plot(modelo)

```

### creando diagrama box plot

```{r}
ggplot(fb, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
  geom_boxplot()+
  labs(x = "Genotipo", y ="LFA", fill = "Riego") + 
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("Boxplot de LFA por Genotipo y Riego")

```
## Comparacion de medias usando library
```{r}
library(agricolae)
# Realizar el test de Tukey para el factor 'riego'
tukey_riego <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_riego)

# Mostrar los resultados del test de Tukey para 'geno'
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)

# Realizar el test de Tukey para la interacciÃ³n 'geno:riego'

tukey_interaction <- HSD.test(modelo, c("riego","geno"), group = TRUE)

print(tukey_interaction)

str (tukey_interaction)
mc<- tukey_interaction$groups %>%
  rownames_to_column("trat") %>%
  separate ( trat,c( "riego" , "variedad" ) )
str(mc)
names(mc)
```
### Grafico en ggplot
```{r}
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
  labs(x = "Variedad", y = "LFA", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
## Comparacion de medias: emmeans

```{r}
library(emmeans)

mc<- emmeans(modelo, ~ riego * geno)
mc<- emmeans(modelo, ~ riego|geno)

mc<-emmeans(modelo, ~ geno|riego) %>%
  as.data.frame()

mc
```
### Plot 
```{r}
ggplot(mc, aes(x = geno, y = emmean, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
# geom_text(aes(label = emmean), position = position_dodge(0.9), vjust = -0.5) +
  labs(x = "Variedad", y = "LFA", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Quarto
Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
